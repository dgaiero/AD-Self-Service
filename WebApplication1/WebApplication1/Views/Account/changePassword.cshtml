@model WebApplication1.Models.userData

@{
    ViewBag.Title = "Change Password";
}
<style>

    .password-rest-main {
        padding: 3rem 1.5rem;
    }

    .field-validation-valid {
        display: none;
    }
</style>
@if (Request.IsAuthenticated)
{
    if (ViewBag.InformationMessage != null)
    {
        <div class="alert @ViewBag.MessageBanner" role="alert">
            @ViewBag.InformationMessage
        </div>
    }
    <div class="alert alert-info" role="alert">
        <h4 class="alert-heading">Information</h4>
        <p>If the username in the field below is not your username, please click below to sign out. You are currently logged in as: <em>@User.GetUPN()</em>.</p>
        <hr>
        <p class="mb-0">@Html.ActionLink("Click here to sign out", "SignOut", "Account", routeValues: null, htmlAttributes: new { @class = "alert-link" })</p>
    </div>

    using (Html.BeginForm("changePassword", "Account", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="form-row">
            <div class="form-group col">
                <label for="username">Username</label>&nbsp;&nbsp;@Html.ValidationMessageFor(m => m.username, "Required", new { @class = "badge badge-danger" })
                @Html.TextBoxFor(m => m.username, new { @type = "text", @class = "form-control", @placeholder = "Enter AD Username", @readonly = true, Value = @User.GetsAMAccountID() })

            </div>
            <div class="form-group col">
                <label for="oldPassword">Old Password</label>&nbsp;&nbsp;@Html.ValidationMessageFor(m => m.oldPassword, "Required", new { @class = "badge badge-danger" })
                @Html.TextBoxFor(m => m.oldPassword, new { @type = "password", @class = "form-control", @placeholder = "Current Password" })

            </div>
        </div>
        <div class="form-row">
            <div class="form-group col">
                <label for="newPassword">New Password</label>&nbsp;&nbsp;@Html.ValidationMessageFor(m => m.newPassword, "Required", new { @class = "badge badge-danger" })
                @Html.TextBoxFor(m => m.newPassword, new { @type = "password", @class = "form-control", @placeholder = "New Password" })

            </div>
            <div class="form-group col">
                <label for="newPasswordConfirm">New Password Confirm</label>&nbsp;&nbsp;@Html.ValidationMessageFor(m => m.newPasswordConfirm, "Must be the same as the new password.", new { @class = "badge badge-danger" })
                @Html.TextBoxFor(m => m.newPasswordConfirm, new { @type = "password", @class = "form-control", @placeholder = "New Password Again" })

            </div>
        </div>
        <button type="submit" class="btn btn-outline-primary">Submit</button>
    }
}
else
{
    <div class="alert alert-warning" role="alert">
        You are not authorized to access this information. @Html.ActionLink("Click here to login.", "SignIn", "Account", routeValues: "/Account/changePassword", htmlAttributes: new { @class = "alert-link" })
    </div>
}
